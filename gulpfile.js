// Bring in individual gulp configs

require('./config/gulp/styles');
require('./config/gulp/scripts');
require('./config/gulp/images');
require('./config/gulp/fonts');
require('./config/gulp/flags');
var build = require('./config/gulp/build');

// This gulp asset pipeline supports linting of scss and js files along with
// compiling and bundling css and js files into static/assets/ directories to
// be used by Hugo.

var gulp = require('gulp');
var gutil = require('gulp-util');

gulp.task('default', function (done) {
  build.printPackageInfo();
  gutil.log('Available tasks');
  gutil.log('$', gutil.colors.magenta('gulp watch'));
  gutil.log('Watch for changes and build the asset-pipeline');
  gutil.log('$', gutil.colors.magenta('gulp [ production, no-test ] build'));
  gutil.log('Build the asset-pipeline with optional production and no-test flags');
  gutil.log('$', gutil.colors.magenta('gulp clean-all'));
  gutil.log('Removes files and directories generated by gulp');
  gutil.log('$', gutil.colors.magenta('gulp [ production ] website'));
  gutil.log('Runs the gulp watch and hugo serve');
  gutil.log('$', gutil.colors.magenta('gulp [ production ] build:website'));
  gutil.log('Build the asset-pipeline and the website using Hugo');
  done();
});

//function setBranchBaseUrl() {
  //if (process.env.SITE_BASEURL) {
    //gutil.log(gutil.colors.yellow('set-baseurl'), "Found pre-set SITE_BASEURL: " + process.env.SITE_BASEURL);
    //gutil.log(gutil.colors.yellow('set-baseurl'), "(If you see this in a Travis log, things are happening in the wrong order.");
  //} else
    //if (process.env.TRAVIS_BRANCH == "master" &&
        //checkBranchBaseUrl('master', 'production', 'SITE_BASEURL_PRODUCTION')) {
      //process.env.SITE_BASEURL = process.env.SITE_BASEURL_PRODUCTION;
    //} else
    //if (process.env.TRAVIS_BRANCH == "staging" &&
        //checkBranchBaseUrl('staging', 'staging', 'SITE_BASEURL_STAGING')) {
      //process.env.SITE_BASEURL = process.env.SITE_BASEURL_STAGING;
    //} else {
    //gutil.log(gutil.colors.yellow('set-baseurl'), 'No environmental config found; using BaseUrl from config file.');
  //}
//}

//function checkBranchBaseUrl(branch, environmentName, baseUrlVarName) {
  //if (process.env[baseUrlVarName]) {
    //gutil.log(gutil.colors.cyan('set-baseurl'), 'Using '+environmentName+' site BaseUrl: ' + process.env[baseUrlVarName]);
    //return true;
  //} else {
    //gutil.log(gutil.colors.red('set-baseurl'), 'ERROR: '+environmentName+' build ('+branch+' branch) lacking a '+baseUrlVarName+' env var. Check the Travis configuration?');
    //process.exit(1);
  //}
//}
